name: runtime upgrade test
on:
  workflow_dispatch:
    inputs:
      runtime:
        description: The runtime for which an upgrade will be tested - manta, calamari
        default: manta
        required: true
      manta_base_url:
        description: The base manta binary url, that will be upgraded
        required: true
      polkadot_url:
        description: The polkadot binary url to be used for the relay chain
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  DEBIAN_FRONTEND: noninteractive
  RUNTIME: ${{github.event.inputs.runtime}}
  RUNTIME_SPEC: ${{github.event.inputs.runtime}}-local
  POLKADOT_BINARY: ${{github.event.inputs.polkadot_url}}
  MANTA_BINARY: ${{github.event.inputs.manta_base_url}}
jobs:
  build-runtimes:
    timeout-minutes: 120
    runs-on: ubuntu-20.04
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v2
      - name: cache target dir
        uses: actions/cache@v2
        with:
          path: "$GITHUB_WORKSPACE/runtime/${{ env.RUNTIME }}/target"
          key: srtool-target-${{ env.RUNTIME }}-${{ github.sha }}
          restore-keys: |
            srtool-target-${{ env.RUNTIME }}
      - name: build runtime
        id: srtool-build
        uses: chevdor/srtool-actions@v0.7.0
        with:
          image: paritytech/srtool
          tag: 1.66.1
          chain: ${{ env.RUNTIME }}
      - name: persist srtool digest
        run: >
          echo '${{ steps.srtool-build.outputs.json }}' |
          jq > ${{ env.RUNTIME }}-srtool-output.json
      - if: always()
        name: upload srtool json
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RUNTIME }}-srtool-json
          path: ${{ env.RUNTIME }}-srtool-output.json
      - if: always()
        name: upload runtime
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RUNTIME }}-runtime
          path: |
            ${{ steps.srtool-build.outputs.wasm }}
            ${{ steps.srtool-build.outputs.wasm_compressed }}
      - if: always()
        name: upload
        uses: actions/upload-artifact@v2
        with:
          name: config-for-runtime-upgrade-test
          path: .github/resources/config-for-runtime-upgrade-test.json
  runtime-upgrade-test:
    needs: [build-runtimes]
    runs-on: ubuntu-20.04
    timeout-minutes: 90
    steps:
      - run: |
          ls -ahl $GITHUB_WORKSPACE/
          mkdir -p $HOME/.local/share/${{ env.RUNTIME }}-pc
          mkdir -p $HOME/.local/bin
          echo "${HOME}/.nvm/versions/node/v16.3.0/bin" >> $GITHUB_PATH
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
      - name: fetch, mv and chmod manta-base
        run: |
          wget ${{ env.MANTA_BINARY }}
          ls -ahl $GITHUB_WORKSPACE/
          mv $GITHUB_WORKSPACE/manta $HOME/.local/bin/manta-base
          chmod +x $HOME/.local/bin/manta-base
          ls -ahl $GITHUB_WORKSPACE/
          ls -ahl $HOME/.local/bin/
      - name: fetch and chmod polkadot
        run: |
          curl -L -o $HOME/.local/bin/polkadot ${{ env.POLKADOT_BINARY }}
          chmod +x $HOME/.local/bin/polkadot
          ls -ahl $HOME/.local/bin/
      - id: create-chainspec
        run: |
          manta-base build-spec --chain ${{ env.RUNTIME_SPEC }} --disable-default-bootnode --raw > $HOME/.local/share/${{ env.RUNTIME }}-pc/${{ env.RUNTIME_SPEC }}-spec.json
          jq \
            --sort-keys \
            --arg name "${{ env.RUNTIME }} testnet base" \
            --arg id ${{ env.RUNTIME_SPEC }}-base \
            --arg relay_chain rococo-local-base \
            '. |
              .name = $name |
              .id = $id |
              .relay_chain = $relay_chain |
              .telemetryEndpoints = [["/dns/api.telemetry.manta.systems/tcp/443/x-parity-wss/%2Fsubmit%2F", 0]]
            ' $HOME/.local/share/${{ env.RUNTIME }}-pc/${{ env.RUNTIME_SPEC }}-spec.json > $HOME/.local/share/${{ env.RUNTIME }}-pc/${{ env.RUNTIME_SPEC }}-base-spec.json
          ls -ahl $HOME/.local/share/${{ env.RUNTIME }}-pc/
          manta-base export-state --chain $HOME/.local/share/${{ env.RUNTIME }}-pc/${{ env.RUNTIME_SPEC }}-base-spec.json > $HOME/.local/share/${{ env.RUNTIME }}-pc/${{ env.RUNTIME_SPEC }}-state.json || true
      - name: fetch config-for-runtime-upgrade-test
        uses: actions/download-artifact@v2
        with:
          name: config-for-runtime-upgrade-test
      - name: create launch config
        run: |
          ls -a
          cat config-for-runtime-upgrade-test.json | \
          jq \
            --arg relaychain_bin $HOME/.local/bin/polkadot \
            --arg relaychain_id rococo-local-base \
            --arg relaychain_name "rococo local base" \
            --arg parachains_bin $HOME/.local/bin/manta-base \
            --arg parachains_spec $HOME/.local/share/${{ env.RUNTIME }}-pc/${{ env.RUNTIME_SPEC }}-base-spec.json \
            '.
              | .relaychain.bin = $relaychain_bin
              | .relaychain.mutation.id = $relaychain_id
              | .relaychain.mutation.name = $relaychain_name
              | .parachains[].bin = $parachains_bin
              | .parachains[].chain = $parachains_spec
            ' > $HOME/.local/share/${{ env.RUNTIME }}-pc/${{ env.RUNTIME_SPEC }}-base-launch-config.json
          jq . $HOME/.local/share/${{ env.RUNTIME }}-pc/${{ env.RUNTIME_SPEC }}-base-launch-config.json
          ls -ahl $HOME/.local/share/${{ env.RUNTIME }}-pc/
      - uses: actions/checkout@v2
        with:
          repository: paritytech/polkadot-launch
          path: polkadot-launch
      - uses: actions/checkout@v2
        with:
          repository: Manta-Network/Dev-Tools
          path: dev-tools
      - name: launch testnet
        run: |
          cd $GITHUB_WORKSPACE/polkadot-launch
          yarn install
          yarn build
          pm2 start dist/cli.js \
            --name polkadot-launch \
            --output $GITHUB_WORKSPACE/polkadot-launch-for-${{ env.RUNTIME_SPEC }}-stdout.log \
            --error $GITHUB_WORKSPACE/polkadot-launch-for-${{ env.RUNTIME_SPEC }}-stderr.log \
            --no-autorestart \
            -- $HOME/.local/share/${{ env.RUNTIME }}-pc/${{ env.RUNTIME_SPEC }}-base-launch-config.json
      - name: fetch new ${{ env.RUNTIME }}_runtime.compact.compressed.wasm
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.RUNTIME }}-runtime
      - uses: actions/checkout@v2
        with:
          repository: Manta-Network/Manta
          path: Manta
      - name: run test suites
        run: |
          sleep 120
          cp $GITHUB_WORKSPACE/${{ env.RUNTIME }}_runtime.compact.compressed.wasm $GITHUB_WORKSPACE/Manta/tests/calamari.wasm
          cd $GITHUB_WORKSPACE/Manta/tests
          yarn install
          yarn
          yarn runtime_upgrade_test --address=ws://127.0.0.1:9921 --exit
          if [ $? != 0 ]; then echo "Runtime upgrade failed!"; exit 1; fi
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RUNTIME_SPEC }}-alice.log
          path: $GITHUB_WORKSPACE/polkadot-launch/9921.log
