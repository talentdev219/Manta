
//! Autogenerated weights for `pallet_membership`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-09-23, STEPS: `10`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("calamari-dev"), DB CACHE: 128

// Executed Command:
// calamari-pc
// benchmark
// --chain=calamari-dev
// --pallet=pallet_membership
// --extrinsic=*
// --execution=Wasm
// --wasm-execution=Compiled
// --heap-pages=4096
// --repeat=20
// --steps=10
// --output=pallet_membership.rs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for pallet_membership.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_membership::WeightInfo for WeightInfo<T> {
	// Storage: Instance1Membership Members (r:1 w:1)
	// Storage: Instance1Collective Proposals (r:1 w:0)
	// Storage: Instance1Collective Members (r:0 w:1)
	// Storage: Instance1Collective Prime (r:0 w:1)
	fn add_member(m: u32, ) -> Weight {
		(28_284_000 as Weight)
			// Standard Error: 18_000
			.saturating_add((283_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Instance1Membership Members (r:1 w:1)
	// Storage: Instance1Collective Proposals (r:1 w:0)
	// Storage: Instance1Membership Prime (r:1 w:0)
	// Storage: Instance1Collective Members (r:0 w:1)
	// Storage: Instance1Collective Prime (r:0 w:1)
	fn remove_member(m: u32, ) -> Weight {
		(38_677_000 as Weight)
			// Standard Error: 0
			.saturating_add((156_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Instance1Membership Members (r:1 w:1)
	// Storage: Instance1Collective Proposals (r:1 w:0)
	// Storage: Instance1Membership Prime (r:1 w:0)
	// Storage: Instance1Collective Members (r:0 w:1)
	// Storage: Instance1Collective Prime (r:0 w:1)
	fn swap_member(m: u32, ) -> Weight {
		(38_601_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((177_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Instance1Membership Members (r:1 w:1)
	// Storage: Instance1Collective Proposals (r:1 w:0)
	// Storage: Instance1Membership Prime (r:1 w:0)
	// Storage: Instance1Collective Members (r:0 w:1)
	// Storage: Instance1Collective Prime (r:0 w:1)
	fn reset_member(m: u32, ) -> Weight {
		(39_801_000 as Weight)
			// Standard Error: 2_000
			.saturating_add((406_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Instance1Membership Members (r:1 w:1)
	// Storage: Instance1Collective Proposals (r:1 w:0)
	// Storage: Instance1Membership Prime (r:1 w:1)
	// Storage: Instance1Collective Members (r:0 w:1)
	// Storage: Instance1Collective Prime (r:0 w:1)
	fn change_key(m: u32, ) -> Weight {
		(41_060_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((174_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Instance1Membership Members (r:1 w:0)
	// Storage: Instance1Collective Prime (r:0 w:1)
	// Storage: Instance1Membership Prime (r:0 w:1)
	fn set_prime(m: u32, ) -> Weight {
		(10_224_000 as Weight)
			// Standard Error: 0
			.saturating_add((129_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Instance1Collective Prime (r:0 w:1)
	// Storage: Instance1Membership Prime (r:0 w:1)
	fn clear_prime(_m: u32, ) -> Weight {
		(4_584_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}
